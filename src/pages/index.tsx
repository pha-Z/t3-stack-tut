import { SignInButton, SignOutButton, auth, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Head from "next/head";
import Image from "next/image";
import { api, type RouterOutputs } from "~/utils/api";

dayjs.extend(relativeTime);

const ProfileImg = ({ imageUrl }: { imageUrl: string }) => (
  <Image
    src={imageUrl}
    alt="Profile image"
    width={56}
    height={56}
    className="rounded-full"
    quality={100}
  />
  // <img src={imageUrl} alt="Profile image" className="h-14 w-14 rounded-full" />
);

const CreatePostWizard = () => {
  const { user } = useUser();
  console.log(user);

  if (!user) return null;

  return (
    <div className="flex gap-3">
      <ProfileImg imageUrl={user.imageUrl} />
      <input
        type="text"
        placeholder="take over the world!"
        className="bg-transparent px-2 outline-none"
      />
    </div>
  );
};

type PostWithAuthor = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithAuthor) => {
  const { post, author } = props;
  return (
    <div className="flex items-center gap-3 border-b border-slate-400 p-8">
      <ProfileImg imageUrl={author.imageUrl} />
      <div className="flex flex-col">
        <div className="whitespace-pre text-slate-300">
          <span>{`@${author.username}  Â·  `}</span>
          <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

export default function Home() {
  const user = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();
  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="h-22 flex items-center justify-between border-b border-slate-400 p-4">
            <CreatePostWizard />
            {user.isSignedIn ? <SignOutButton /> : <SignInButton />}
          </div>
          <div className="">
            {data.map((postWithAuthor) => (
              <PostView {...postWithAuthor} key={postWithAuthor.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
